mean(results$metric10[1][[1]])
results$metric10percent[1] <- as.double(mean(results$metric10[1][[1]]))
results$metric10percent[1]
results$metric10[1][[1]]
results$metric10[100][[1]]
sum(results$metric10[100][[1]])
mean(results$metric10[100][[1]])
results$metric10percent[1]
results$metric5percent[1]
results$metric10percent[1] <- as.double(mean(results$metric10[1][[1]]))
results$metric10percent[1]
results$metric10percent[1] <- as.double(mean(results$metric10[1][[1]]))[[1]]
results$metric10percent[1]
as.double(mean(results$metric10[1][[1]]))
# Metric 10
results$metric10percent <- rep(0, times = nrows(results))
# Metric 10
results$metric10percent <- rep(0, times = nrow(results))
results$metric10percent[1] <- as.double(mean(results$metric10[1][[1]]))
results$metric10percent[1]
## Run Metric ##
results$metric5percent <- rep(0, times = nrow(results))
# Metric 10
results$metric10percent <- rep(0, times = nrow(results))
for (i in 1:nrow(results)){
results$metric10[i] <- list(I(RankMetric(results$ranking[i], order = "largest", topN = 10)))
results$metric10percent[i] <- as.double(mean(results$metric10[i][[1]]))[[1]]
}
results$metric10percent[5]
range(results$metric10percent)
hist(results$metric10percent)
## Run Metric ##
results$metric5percent <- rep(0, times = nrow(results))
for (i in 1:nrow(results)){
results$metric5[i] <- list(I(RankMetric(results$ranking[i], order = "largest", topN = 5)))
results$metric5percent[i] <- as.double(mean(results$metric5[i][[1]]))[[1]]
}
# Metric 15
results$metric15percent <- rep(0, times = nrow(results))
for (i in 1:nrow(results)){
results$metric15[i] <- list(I(RankMetric(results$ranking[i], order = "largest", topN = 15)))
results$metric15percent[i] <- as.double(mean(results$metric15[i][[1]]))[[1]]
}
source('~/git_repos/RankingMethods/experiment_results_graphs.r', echo=TRUE)
getwd()
## Bar Graphs ##
setwd("/Users/cora/git_repos/RankingMethods/plots/")
ps.options(fonts=c("serif"), width = 7, height = 7)
postscript("bar_metric5_e.eps")
metric5_e <- ggplot(results) +
geom_bar(aes(as.factor(rankSteepness), as.numeric(metric5percent)), stat="summary", fun.y=mean) +
ggtitle("Percent Top 5 Correct Ranking by e") +
ylab("Percent Top 5 Correct") + xlab("Rank Weight Steepness (epsilon)")
metric5_e
dev.off()
postscript("bar_metric5_loss.eps", fonts=c("serif", "Palatino"))
metric5_loss <- ggplot(results) +
geom_bar(aes(as.factor(loss), as.numeric(metric5percent)), stat="summary", fun.y=mean) +
ggtitle("Percent Top 5 Correct Ranking by Loss") +
ylab("Percent Top 5 Correct") + xlab("loss type")
metric5_loss
dev.off()
#metric 10
postscript("bar_metric10_e.eps")
metric10_e <- ggplot(results) +
geom_bar(aes(as.factor(rankSteepness), as.numeric(results$metric10percent)), stat = "summary", fun.y = "mean") +
ggtitle("Percent Top 10 Correct Ranking by e") +
ylab("Percent Top 10 Correct") + xlab("Rank Weight Steepness (epsilon)")
metric10_e
dev.off()
postscript("bar_metric10_loss.eps", fonts=c("serif", "Palatino"))
metric10_loss <- ggplot(results) +
geom_bar(aes(as.factor(loss), as.numeric(results$metric10percent)), stat = "summary", fun.y = "mean") +
ggtitle("Percent Top 10 Correct Ranking by Loss") +
ylab("Percent Top 10 Correct") + xlab("loss type")
metric10_loss
dev.off()
#metric 15
postscript("bar_metric15_e.eps")
metric15_e <- ggplot(results) +
geom_bar(aes(as.factor(rankSteepness), as.numeric(results$metric15percent)), stat = "summary", fun.y = "mean") +
ggtitle("Percent Top 15 Correct Ranking by e") +
ylab("Percent Top 15 Correct") + xlab("Rank Weight Steepness (epsilon)")
metric15_e
dev.off()
postscript("bar_metric15_loss.eps", fonts=c("serif", "Palatino"))
metric15_loss <- ggplot(results) +
geom_bar(aes(as.factor(loss), as.numeric(results$metric15percent)), stat = "summary", fun.y = "mean")+
ggtitle("Percent Top 15 Correct Ranking by Loss") +
ylab("Percent Top 15 Correct") + xlab("loss type")
metric15_loss
dev.off()
results[[paste0("metricStrict", 3)]] <- rep(0, times = nrow(results))
results[[paste0("metricStrict", 3)]] <- rep(0, times = nrow(results))
results[[paste0("metricStrict", 3)]][1] <- list(I(RankMetricStrict(results$ranking[1],
order = "largest", topN = t)))
results[[paste0("metricStrict", 3)]][1]
as.double(mean(results[[paste0("metricStrict", t)]][1][[1]]))[[1]]
mean(results[[paste0("metricStrict", t)]][1][[1]])
results[[paste0("metricStrict", t)]][1]
results[[paste0("metricStrict", t)]]
results[[paste0("metricStrict", t)]][[1]]
results[[paste0("metricStrict", 3)]][[1]]
results[[paste0("metricStrict", 3)]]
results[[paste0("metricStrict", 3)]][1]
results[[paste0("metricStrict", 3)]][1][[1]]
as.double(mean(results[[paste0("metricStrict", 3)]][1][[1]]))[[1]]
list(I(RankMetricStrict(results$ranking[1],
order = "largest", topN = 3)))
results[[paste0("metricStrict", 3)]][1] <- list(I(RankMetricStrict(results$ranking[1],
order = "largest", topN = t)))
results[[paste0("metricStrict", 3)]][1] <- list(I(RankMetricStrict(results$ranking[1],
order = "largest", topN = 3)))
as.double(mean(results[[paste0("metricStrict", 3)]][1][[1]]))[[1]]
results[[paste0("metricStrictPercent", 3)]][1] <- as.double(mean(results[[paste0("metricStrict", t)]][1][[1]]))[[1]]
results[[paste0("metricStrict", t)]][1][[1]]
results[[paste0("metricStrictPercent", 3)]][1] <- as.double(mean(results[[paste0("metricStrict", 3)]][1][[1]]))[[1]]
results[[paste0("metricStrictPercent", 3)]][1]
results[[paste0("metricStrict", 3)]] <- rep(0, times = nrow(results))
results[[paste0("metricStrict", 3)]][1] <- list(I(RankMetricStrict(results$ranking[1],
order = "largest", topN = 3)))
results[[paste0("metricStrictPercent", 3)]][1] <- as.double(mean(results[[paste0("metricStrict", 3)]][1][[1]]))[[1]]
results[[paste0("metricStrictPercent", 3)]][1]
results[[paste0("metricStrictPercent", 3)]][1][[1]]
as.double(mean(results[[paste0("metricStrict", 3)]][1][[1]]))
results[[paste0("metricStrict", 3)]] <- rep(0, times = nrow(results))
results[[paste0("metricStrict", 3)]][1]
results[[paste0("metricStrict", 3)]][1] <- list(I(RankMetricStrict(results$ranking[1],
order = "largest", topN = 3)))
results[[paste0("metricStrictPercent", 3)]][1] <- as.double(mean(results[[paste0("metricStrict", 3)]][1][[1]]))[[1]]
results[[paste0("metricStrictPercent", 3)]][1]
results[[paste0("metricStrictPercent", 3)]][1] <- as.double(mean(results[[paste0("metricStrict", 3)]][1][[1]])[[1]])
results[[paste0("metricStrictPercent", 3)]][1]
results[[paste0("metricStrict", 3)]] <- rep(0, times = nrow(results))
results[[paste0("metricStrict", 3)]][1] <- list(I(RankMetricStrict(results$ranking[1],
order = "largest", topN = 3)))
results[[paste0("metricStrictPercent", 3)]][1] <- as.double(mean(results[[paste0("metricStrict", 3)]][1][[1]])[[1]])
results[[paste0("metricStrictPercent", 3)]][1]
View(results)
results$metricStrict1
hist(results$metricStrict1)
table(results$metricStrict1)
results$metricStrict1[1]
results[[paste0("metricStrict", 3)]] <- rep(0, times = nrow(results))
results[[paste0("metricStrictPercent", 3)]] <- rep(0, times = nrow(results))
results[[paste0("metricStrict", 3)]][1] <- list(I(RankMetricStrict(results$ranking[1],
order = "largest", topN = 3)))
results[[paste0("metricStrictPercent", 3)]][1] <- as.double(mean(results[[paste0("metricStrict", 3)]][1][[1]])[[1]])
results[[paste0("metricStrictPercent", 3)]][1]
# Strict Metric from 1 to 15
for (t in 1:15){
results[[paste0("metricStrictPercent", t)]] <- rep(0, times = nrow(results))
for (i in 1:nrow(results)){
results[[paste0("metricStrict", t)]][i] <- list(I(RankMetricStrict(results$ranking[i],
order = "largest", topN = t)))
results[[paste0("metricStrictPercent", t)]][i] <- as.double(mean(results[[paste0("metricStrict", t)]][i][[1]])[[1]])
}
}
hist(results$metricStrictPercent1)
mean(results$metricStrictPercent1)
## PLOTS ##
#How often is #1 ranked as #1?
ps.options(fonts=c("serif"), width = 7, height = 7)
## PLOTS ##
#How often is #1 ranked as #1?
ps.options(fonts=c("serif"), width = 7, height = 7)
postscript("bar_StrictMetricTop1_e.eps")
StrictMetric1_e <- ggplot(results) +
geom_bar(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent1)), stat="summary", fun.y=mean) +
ggtitle("How Often is Item 1 Ranked First?") +
ylab("Mean Percent Top Correct (Strict)") + xlab("Rank Weight Steepness (epsilon)")
StrictMetric1_e
dev.off()
mean(results$metricStrictPercent1[results$rankSteepness < 0.1,])
results$metricStrictPercent1[results$rankSteepness < 0.1,]
results[results$rankSteepness < 0.1,]$metricStrictPercent1
mean(results[results$rankSteepness < 0.1,]$metricStrictPercent1)
mean(results[results$rankSteepness > 0.1,]$metricStrictPercent1)
mean(results[results$rankSteepness > 0.2,]$metricStrictPercent1)
mean(results[results$rankSteepness > 0.4,]$metricStrictPercent1)
mean(results[results$rankSteepness < 0.05,]$metricStrictPercent1)
## PLOTS ##
#How often is #1 ranked as #1?
ps.options(fonts=c("serif"), width = 7, height = 7)
postscript("bar_StrictMetricTop1_e.eps")
StrictMetric1_e <- ggplot(results) +
geom_bar(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent1)), stat="summary", fun.y=mean) +
ggtitle("How Often is Item 1 Ranked First?") +
ylab("Mean Percent Top Correct (Strict)") + xlab("Rank Weight Steepness (epsilon)")
StrictMetric1_e
dev.off()
StrictMetric1_e
StrictMetric1_e <- ggplot(results) +
geom_bar(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent1)), stat="summary", fun.y=mean) +
ggtitle("How Often is Item 1 Ranked First?") + ylim(c(0.2, 0.5)) +
ylab("Mean Percent Top Correct (Strict)") + xlab("Rank Weight Steepness (epsilon)")
StrictMetric1_e
StrictMetric1_e <- ggplot(results) +
geom_bar(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent1)), stat="summary", fun.y=mean) +
ggtitle("How Often is Item 1 Ranked First?") + ylim(0.2, 0.5) +
ylab("Mean Percent Top Correct (Strict)") + xlab("Rank Weight Steepness (epsilon)")
StrictMetric1_e
StrictMetric1_e <- ggplot(results) +
geom_bar(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent1)), stat="summary", fun.y=mean) +
ggtitle("How Often is Item 1 Ranked First?") + ylim(0.2, 0.5) +
ylab("Mean Percent Top Correct (Strict)") + xlab("Rank Weight Steepness (epsilon)")
StrictMetric1_e
StrictMetric1_e <- ggplot(results) +
geom_bar(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent1)), stat="summary", fun.y=mean) +
ggtitle("How Often is Item 1 Ranked First?") +# ylim(0.2, 0.5) +
ylab("Mean Percent Top Correct (Strict)") + xlab("Rank Weight Steepness (epsilon)")
StrictMetric1_e <- ggplot(results) +
geom_bar(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent1)), stat="summary", fun.y=mean) +
ggtitle("How Often is Item 1 Ranked First?") +# ylim(0.2, 0.5) +
ylab("Mean Percent Top Correct (Strict)") + xlab("Rank Weight Steepness (epsilon)")
StrictMetric1_e
StrictMetric1_e <- ggplot(results) +
geom_bar(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent1))) +
ggtitle("How Often is Item 1 Ranked First?") +# ylim(0.2, 0.5) +
ylab("Mean Percent Top Correct (Strict)") + xlab("Rank Weight Steepness (epsilon)")
StrictMetric1_e
StrictMetric1_e <- ggplot(results) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent1))) +
ggtitle("How Often is Item 1 Ranked First?") +# ylim(0.2, 0.5) +
ylab("Mean Percent Top Correct (Strict)") + xlab("Rank Weight Steepness (epsilon)")
StrictMetric1_e
StrictMetric1_e <- ggplot(results) +
geom_bar(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent1)), stat="summary", fun.y=mean) +
ggtitle("How Often is Item 1 Ranked First?") +# ylim(0.2, 0.5) +
ylab("Mean Percent Top Correct (Strict)") + xlab("Rank Weight Steepness (epsilon)")
StrictMetric1_e
StrictMetric1_e <- ggplot(results) +
geom_bar(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent1)), stat="summary", fun.y=mean) +
ggtitle("How Often is Item 1 Ranked First?") + ylim(0, 0.5) +
ylab("Mean Percent Top Correct (Strict)") + xlab("Rank Weight Steepness (epsilon)")
StrictMetric1_e
StrictMetric1_e <- ggplot(results) +
geom_bar(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent1)), stat="summary", fun.y=mean) +
ggtitle("How Often is Item 1 Ranked First?") + #ylim(0, 0.5) +
ylab("Mean Percent Top Correct (Strict)") + xlab("Rank Weight Steepness (epsilon)")
StrictMetric1_e
#Strict Metric from 1 to 15 (rainbow for 1 to 15?)
ps.options(fonts=c("serif"), width = 7, height = 7)
postscript("bar_StrictMetric_e.eps")
StrictMetric_e <- ggplot(results) +
geom_bar(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent5)), stat="summary", fun.y=mean, fill = "red", alpha = "0.4") +
geom_bar(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent10)), stat="summary", fun.y=mean, fill = "orange", alpha = "0.4") +
geom_bar(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent15)), stat="summary", fun.y=mean, fill = "yellow", alpha = "0.4") +
ggtitle("% of Time Rank of Each Element Correct by e (Strict)") +
ylab("Mean Percent Top Correct (Strict)") + xlab("Rank Weight Steepness (epsilon)")
StrictMetric_e
dev.off()
ps.options(fonts=c("serif"), width = 7, height = 7)
postscript("bar_StrictMetricTop1_e.eps")
StrictMetric1_e <- ggplot(results) +
geom_bar(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent1)), stat="summary", fun.y=mean) +
ggtitle("How Often is Item 1 Ranked First?") + #ylim(0, 0.5) +
ylab("Mean Percent Top Correct (Strict)") + xlab("Rank Weight Steepness (epsilon)")
StrictMetric1_e
dev.off()
ps.options(fonts=c("serif"), width = 7, height = 7)
postscript("bar_StrictMetric_e.eps")
StrictMetric_e <- ggplot(results) +
geom_bar(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent5)), stat="summary", fun.y=mean, fill = "red", alpha = "0.4") +
geom_bar(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent10)), stat="summary", fun.y=mean, fill = "orange", alpha = "0.4") +
geom_bar(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent15)), stat="summary", fun.y=mean, fill = "yellow", alpha = "0.4") +
ggtitle("% of Time Rank of Each Element Correct by e (Strict)") +
ylab("Mean Percent Top Correct (Strict)") + xlab("Rank Weight Steepness (epsilon)")
StrictMetric_e
dev.off()
StrictMetric_e
ps.options(fonts=c("serif"), width = 7, height = 7)
postscript("point_StrictMetric_e.eps")
pointStrictMetric_e <- ggplot(results) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent5)), color = "red", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent10)), color = "orange", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent15)), color = "yellow", stat="summary", fun.y=mean) +
ggtitle("% of Time Rank of Each Element Correct by e (Strict)") +
ylab("Mean Percent Top Correct (Strict)") + xlab("Rank Weight Steepness (epsilon)")
pointStrictMetric_e
dev.off()
pointStrictMetric_e
ps.options(fonts=c("serif"), width = 7, height = 7)
postscript("point_StrictMetric_e.eps")
pointStrictMetric_e <- ggplot(results) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent1)), color = "black", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent3)), color = "pink", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent5)), color = "red", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent10)), color = "orange", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent15)), color = "yellow", stat="summary", fun.y=mean) +
ggtitle("% of Time Rank of Each Element Correct by e (Strict)") +
ylab("Mean Percent Top Correct (Strict)") + xlab("Rank Weight Steepness (epsilon)")
pointStrictMetric_e
dev.off()
pointStrictMetric_e
ps.options(fonts=c("serif"), width = 7, height = 7)
postscript("point_StrictMetric_e.eps")
pointStrictMetric_e <- ggplot(results) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent1)), color = "black", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent3)), color = "pink", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent5)), color = "red", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent7)), color = "orange", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent10)), color = "yellow", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent12)), color = "green", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent15)), color = "blue", stat="summary", fun.y=mean) +
ggtitle("% of Time Rank of Each Element Correct by e (Strict)") +
ylab("Mean Percent Top Correct (Strict)") + xlab("Rank Weight Steepness (epsilon)")
pointStrictMetric_e
dev.off()
pointStrictMetric_e
pointStrictMetric_e <- ggplot(results) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent1)), color = "black", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent3)), color = "darkpink", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent5)), color = "red", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent7)), color = "orange", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent10)), color = "yellow", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent12)), color = "green", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent15)), color = "blue", stat="summary", fun.y=mean) +
ggtitle("% of Time Rank of Each Element Correct by e (Strict)") +
ylab("Mean Percent Top Correct (Strict)") + xlab("Rank Weight Steepness (epsilon)")
pointStrictMetric_e
ps.options(fonts=c("serif"), width = 7, height = 7)
postscript("point_StrictMetric_e.eps")
pointStrictMetric_e <- ggplot(results) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent1)), color = "gray", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent2)), color = "black", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent3)), color = "pink", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent5)), color = "red", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent7)), color = "orange", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent10)), color = "yellow", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent12)), color = "green", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent15)), color = "blue", stat="summary", fun.y=mean) +
ggtitle("% of Time Rank of Each Element Correct by e (Strict)") +
ylab("Mean Percent Top Correct (Strict)") + xlab("Rank Weight Steepness (epsilon)")
pointStrictMetric_e
dev.off()
pointStrictMetric_e
ps.options(fonts=c("serif"), width = 7, height = 7)
postscript("point_StrictMetric_e.eps")
pointStrictMetric_e <- ggplot(results) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent1)), color = "gray", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent2)), color = "black", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent3)), color = "pink", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent5)), color = "red", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent7)), color = "orange", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent10)), color = "yellow", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent12)), color = "green", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent15)), color = "blue", stat="summary", fun.y=mean) +
ggtitle("% of Times Element Ranked Correctly (Strict Metric) by e") +
ylab("Mean Percent Top Correct (Strict)") + xlab("Rank Weight Steepness (epsilon)")
pointStrictMetric_e
dev.off()
ps.options(fonts=c("serif"), width = 7, height = 7)
postscript("point_StrictMetric_e.eps")
pointStrictMetric_e <- ggplot(results) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent1)), color = "gray", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent2)), color = "black", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent3)), color = "pink", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent5)), color = "red", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent7)), color = "orange", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent10)), color = "yellow", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent12)), color = "green", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent15)), color = "blue", stat="summary", fun.y=mean) +
ggtitle("% Element Ranked Correctly (Strict Metric) by e") +
ylab("Mean Percent Top Correct (Strict)") + xlab("Rank Weight Steepness (epsilon)")
pointStrictMetric_e
dev.off()
# Metric from 1 to 15
for (t in 1:15){
results[[paste0("metricPercent", t)]] <- rep(0, times = nrow(results))
for (i in 1:nrow(results)){
results[[paste0("metric", t)]][i] <- list(I(RankMetric(results$ranking[i],
order = "largest", topN = t)))
results[[paste0("metricPercent", t)]][i] <- as.double(mean(results[[paste0("metric", t)]][i][[1]])[[1]])
}
}
ps.options(fonts=c("serif"), width = 7, height = 7)
postscript("point_Metric_e.eps")
pointMetric_e <- ggplot(results) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricPercent1)), color = "gray", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricPercent2)), color = "black", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricPercent3)), color = "pink", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricPercent5)), color = "red", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricPercent7)), color = "orange", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricPercent10)), color = "yellow", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricPercent12)), color = "green", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricPercent15)), color = "blue", stat="summary", fun.y=mean) +
ggtitle("% True Top N Ranked in Top N by e") +
ylab("Mean True Top N Ranked in Top N") + xlab("Rank Weight Steepness (epsilon)")
pointMetric_e
dev.off()
pointMetric_e
ps.options(fonts=c("serif"), width = 7, height = 7)
postscript("point_Metric_e.eps")
pointMetric_e <- ggplot(results) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricPercent1)), color = "gray", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricPercent2)), color = "black", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricPercent3)), color = "pink", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricPercent5)), color = "red", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricPercent7)), color = "orange", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricPercent10)), color = "yellow", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricPercent12)), color = "green", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricPercent15)), color = "blue", stat="summary", fun.y=mean) +
ggtitle("% True Top N Ranked in Top N by Steepness") +
ylab("Mean True Top N Ranked in Top N") + xlab("Rank Weight Steepness (epsilon)")
pointMetric_e
dev.off()
ps.options(fonts=c("serif"), width = 7, height = 7)
postscript("point_Metric_e.eps")
pointMetric_e <- ggplot(results) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricPercent1)), color = "gray", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricPercent2)), color = "black", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricPercent3)), color = "pink", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricPercent5)), color = "red", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricPercent7)), color = "orange", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricPercent10)), color = "yellow", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricPercent12)), color = "green", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricPercent15)), color = "blue", stat="summary", fun.y=mean) +
ggtitle("% True Top N Ranked in Top N by Steepness") +
ylab("Mean True Top N Ranked in Top N") + xlab("Rank Weight Steepness (epsilon)")
pointMetric_e
dev.off()
ps.options(fonts=c("serif"), width = 7, height = 7)
postscript("point_StrictMetric_e.eps")
pointStrictMetric_e <- ggplot(results) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent1)), color = "gray", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent2)), color = "black", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent3)), color = "pink", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent5)), color = "red", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent7)), color = "orange", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent10)), color = "yellow", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent12)), color = "green", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent15)), color = "blue", stat="summary", fun.y=mean) +
ggtitle("% Element Ranked Correctly (Strict Metric) by Weight Steepness") +
ylab("Mean Percent Top Correct (Strict)") + xlab("Rank Weight Steepness (epsilon)")
pointStrictMetric_e
dev.off()
ps.options(fonts=c("serif"), width = 7, height = 7)
postscript("point_Metric_e.eps")
pointMetric_e <- ggplot(results) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricPercent1)), color = "gray", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricPercent2)), color = "black", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricPercent3)), color = "pink", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricPercent5)), color = "red", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricPercent7)), color = "orange", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricPercent10)), color = "yellow", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricPercent12)), color = "green", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricPercent15)), color = "blue", stat="summary", fun.y=mean) +
ggtitle("% True Top N Ranked in Top N by Weight Steepness") +
ylab("Mean True Top N Ranked in Top N") + xlab("Rank Weight Steepness (epsilon)")
pointMetric_e
dev.off()
ps.options(fonts=c("serif"), width = 7, height = 7)
postscript("point_StrictMetric_e.eps")
pointStrictMetric_e <- ggplot(results) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent1)), color = "gray", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent2)), color = "black", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent3)), color = "pink", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent5)), color = "red", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent7)), color = "orange", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent10)), color = "yellow", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent12)), color = "green", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent15)), color = "blue", stat="summary", fun.y=mean) +
ggtitle("% of Elements in topN Ranked Correctly (Strict Metric) by Weight Steepness") +
ylab("Mean Percent Top Correct (Strict)") + xlab("Rank Weight Steepness (epsilon)")
pointStrictMetric_e
dev.off()
pointStrictMetric_e <- ggplot(results) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent1)), color = "gray", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent2)), color = "black", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent3)), color = "pink", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent5)), color = "red", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent7)), color = "orange", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent10)), color = "yellow", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent12)), color = "green", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent15)), color = "blue", stat="summary", fun.y=mean) +
scale_colour_manual(name="Error Bars",values=c("gray", "black"),
guide = guide_legend(override.aes=aes(fill=NA))) +
ggtitle("% of Elements in topN Ranked Correctly (Strict Metric) by Weight Steepness") +
ylab("Mean Percent Top Correct (Strict)") + xlab("Rank Weight Steepness (epsilon)")
pointStrictMetric_e
pointStrictMetric_e <- ggplot(results) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent1)), color = "gray", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent2)), color = "black", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent3)), color = "pink", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent5)), color = "red", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent7)), color = "orange", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent10)), color = "yellow", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent12)), color = "green", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent15)), color = "blue", stat="summary", fun.y=mean) +
scale_colour_manual(name="Error Bars",values=c("gray", "black")) +
ggtitle("% of Elements in topN Ranked Correctly (Strict Metric) by Weight Steepness") +
ylab("Mean Percent Top Correct (Strict)") + xlab("Rank Weight Steepness (epsilon)")
pointStrictMetric_e
rankSteepness = c(0, 0.0001, 0.001, 0.005, 0.01, 0.05, 0.1, 0.2, 0.3, 0.4, 0.5), #rankWeights
rankSteepness = c(0, 0.0001, 0.001, 0.005, 0.01, 0.05, 0.1, 0.2, 0.3, 0.4, 0.5)
length(rankSteepness)
ps.options(fonts=c("serif"), width = 7, height = 7)
postscript("point_StrictMetric_e.eps")
pointStrictMetric_e <- ggplot(results) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent1)), color = "gray", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent2)), color = "black", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent3)), color = "pink", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent5)), color = "red", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent7)), color = "orange", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent10)), color = "yellow", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent12)), color = "green", stat="summary", fun.y=mean) +
geom_point(aes(as.factor(rankSteepness), as.numeric(metricStrictPercent15)), color = "blue", stat="summary", fun.y=mean) +
ggtitle("% of Top N Elements Ranked Correctly (Strict) by Weight Steepness") +
ylab("Mean Percent Top N Elements Correct (Strict)") + xlab("Rank Weight Steepness (epsilon)")
pointStrictMetric_e
dev.off()
